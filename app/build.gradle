plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id "org.jetbrains.kotlin.kapt"
}

apply from: "../gradle/common.gradle"

def include(moduleName) {
    if (hasProperty('only')) {
        return only.split(",").contains(moduleName)
    }
    return true
}

android {
    namespace "com.nlgtuankiet.modularization"
    compileSdk 33
    defaultConfig {
        applicationId "com.nlgtuankiet.modularization"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        if (project.hasProperty("only")) {
            new File(projectDir, "src/fake").listFiles().each { f ->
                if (!include(f.name)) {
                    // include fake source set
                    main.java.srcDir "src/fake/${f.name}"
                }
            }
        }
    }
    dynamicFeatures = [':checkout']
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.12'
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    implementation deps.dagger
    kapt deps.daggerProcessor
    kapt deps.daggerAndroidProcessor

    if (include("home")) {
        implementation deps.internal.home
    }

    if (include("detail")) {
        implementation deps.internal.detail
    }

    if (include("search")) {
        implementation deps.internal.search
    }


    implementation deps.internal.common
    implementation deps.internal.data

    implementation deps.guava
}
